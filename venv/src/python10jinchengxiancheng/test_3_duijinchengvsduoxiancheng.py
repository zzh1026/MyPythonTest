#!/usr/bin/env python3
# -*- coding: utf-8 -*-

' 注释 '

__author__ = 'zzh'

#
# 进程 vs. 线程
#
# 要实现多任务，通常我们会设计Master-Worker模式，Master负责分配任务，Worker负责执行任务，
# 因此，多任务环境下，通常是一个Master，多个Worker。
#
# 如果用多进程实现Master-Worker，主进程就是Master，其他进程就是Worker。
# 如果用多线程实现Master-Worker，主线程就是Master，其他线程就是Worker。
#
# 多进程模式最大的优点就是稳定性高，因为一个子进程崩溃了，不会影响主进程和其他子进程。(Apache最早就是采用多进程模式)
# 多进程模式的缺点是创建进程的代价大，而且，操作系统能同时运行的进程数也是有限的，在内存和CPU的限制下，
#       如果有几千个进程同时运行，操作系统连调度都会成问题。
#
# 多线程模式通常比多进程快一点，但是也快不到哪去，而且，多线程模式致命的缺点就是任何一个线程挂掉都可能直接造成整个进程崩溃，因为所有线程共享进程的内存。
# 多线程的效率比多进程要高，但是多线程存在稳定性的问题.
#

#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# create by zzh
#
# 变量可以指向函数
#
# 即 一个变量的名字 可以是一个函数 本身, 而不一定是 函数的结果
#
# 把函数作为参数传入，这样的函数称为高阶函数，函数式编程就是指这种高度抽象的编程范式。
#

# print(abs(-10))  # 调用该函数
#
# print(abs)  # 只写abs

# abs(-10)是函数调用，而abs是函数本身。

# 把函数本身赋值给变量
f = abs
# print(f)
# print(f(-8))

# 结论：函数本身也可以赋值给变量，即：变量可以指向函数。
#
# 说明变量f现在已经指向了abs函数本身。直接调用abs()函数和调用变量f()完全相同。

# 函数名也是变量
# abs = 10
# abs(-19)
# print(abs)


# 把abs指向10后，就无法通过abs(-10)调用该函数了！因为abs这个变量已经不指向求绝对值函数而是指向一个整数10！

# 注：由于abs函数实际上是定义在import builtins模块中的，所以要让修改abs变量的指向在其它模块也生效，
# 要用import builtins; builtins.abs = 10。
# 这样,在执行完毕这一句代码之后 , 后面的代码 执行 abs() 代码的时候就会生效了


# 传入函数
# 既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数。

# 一个最简单的高阶函数：
def add(x, y, f):
    return f(x) + f(y)


print(add(4, -5, abs))
